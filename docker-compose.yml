version: '2'

# volumes:
#   redis_data:
#   rabbitmq_data:
#   gateway_data:

services:
  frontend:
    build:
      context: ./frontend
    restart: always
    ports:
      - '80:3000'
    environment:
      - VITE_MQTT_BROKER_HOST=${VITE_MQTT_BROKER_HOST}
      - VITE_MQTT_BROKER_PORT_WS=${VITE_MQTT_BROKER_PORT_WS}
      - VITE_MQTT_BROKER_USERNAME=${VITE_MQTT_BROKER_USERNAME}
      - VITE_MQTT_BROKER_PASSWORD=${VITE_MQTT_BROKER_PASSWORD}
      - VITE_MQTT_ENVIRONMENT_TOPICS=${VITE_MQTT_ENVIRONMENT_TOPICS}
      - VITE_MQTT_SENSOR_TOPICS=${VITE_MQTT_SENSOR_TOPICS}
      - VITE_MQTT_PLANNER_TOPCS=${VITE_MQTT_PLANNER_TOPCS}
      - VITE_DEFAULT_TEMPERATURE_MIN=${VITE_DEFAULT_TEMPERATURE_MIN}
      - VITE_DEFAULT_TEMPERATURE_MAX=${VITE_DEFAULT_TEMPERATURE_MAX}
      - VITE_DEFAULT_HUMIDITY_MIN=${VITE_DEFAULT_HUMIDITY_MIN}
      - VITE_DEFAULT_HUMIDITY_MAX=${VITE_DEFAULT_HUMIDITY_MAX}
      - VITE_DEFAULT_MOTION_LIGHT_DURATION=${VITE_DEFAULT_MOTION_LIGHT_DURATION}
      - VITE_DEFAULT_PRESSURE_THRESHOLD=${VITE_DEFAULT_PRESSURE_THRESHOLD}

  rabbitmq:
    build: ./messaging
    restart: always
    ports:
      - '1883:1883' # MQTT TCP port
      - '15675:15675' # MQTT WebSocket port
      # - '5672:5672' # AMQP port (not needed?)
      - '15672:15672' # Management UI port
    # volumes:
    #   - rabbitmq_data:/var/lib/rabbitmq
    expose:
      - 1883
      - 15675
      # - 5672
      # - 15672

  redis:
    build: database/
    image: redis:7
    restart: always
    ports:
      - '6379:6379'
    # volumes:
    #   - redis_data:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 6379

  backend:
    build: ./backend
    restart: always
    # depends_on:
    #   - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    ports:
      - '4000:4000'
    expose:
      - 4000

  context:
    build: ./context
    restart: always
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT_TCP=${MQTT_BROKER_PORT_TCP}
      - MQTT_BROKER_USERNAME=${MQTT_BROKER_USERNAME}
      - MQTT_BROKER_PASSWORD=${MQTT_BROKER_PASSWORD}
      - MQTT_ENVIRONMENT_TOPICS=${MQTT_ENVIRONMENT_TOPICS}
      - MQTT_SENSOR_TOPICS=${MQTT_SENSOR_TOPICS}
      - MQTT_ACTUATOR_STATE_TOPICS=${MQTT_ACTUATOR_STATE_TOPICS}
      - MQTT_PLANNER_TOPCS=${MQTT_PLANNER_TOPCS}
      - DEFAULT_TEMPERATURE_MIN=${DEFAULT_TEMPERATURE_MIN}
      - DEFAULT_TEMPERATURE_MAX=${DEFAULT_TEMPERATURE_MAX}
      - DEFAULT_HUMIDITY_MIN=${DEFAULT_HUMIDITY_MIN}
      - DEFAULT_HUMIDITY_MAX=${DEFAULT_HUMIDITY_MAX}
      - DEFAULT_MOTION_LIGHT_DURATION=${DEFAULT_MOTION_LIGHT_DURATION}
      - DEFAULT_PRESSURE_THRESHOLD=${DEFAULT_PRESSURE_THRESHOLD}
    # depends_on:
    #   - rabbitmq

  simulated-devices:
    build: ./simulated-devices
    restart: always
    environment:
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST}
      - MQTT_BROKER_PORT_TCP=${MQTT_BROKER_PORT_TCP}
      - MQTT_BROKER_USERNAME=${MQTT_BROKER_USERNAME}
      - MQTT_BROKER_PASSWORD=${MQTT_BROKER_PASSWORD}
      - MQTT_ENVIRONMENT_TOPICS=${MQTT_ENVIRONMENT_TOPICS}
      - MQTT_SENSOR_TOPICS=${MQTT_SENSOR_TOPICS}
      - MQTT_ACTUATOR_COMMAND_TOPICS=${MQTT_ACTUATOR_COMMAND_TOPICS}
      - MQTT_ACTUATOR_STATE_TOPICS=${MQTT_ACTUATOR_STATE_TOPICS}
      - DEFAULT_TEMPERATURE_MIN=${DEFAULT_TEMPERATURE_MIN}
      - DEFAULT_TEMPERATURE_MAX=${DEFAULT_TEMPERATURE_MAX}
      - DEFAULT_TEMPERATURE_UPPER=${DEFAULT_TEMPERATURE_UPPER}
      - DEFAULT_TEMPERATURE_INTERVAL=${DEFAULT_TEMPERATURE_INTERVAL}
      - DEFAULT_TEMPERATURE_INCREASE_RATE=${DEFAULT_TEMPERATURE_INCREASE_RATE}
      - DEFAULT_TEMPERATURE_DECREASE_RATE=${DEFAULT_TEMPERATURE_DECREASE_RATE}
      - DEFAULT_HUMIDITY_MIN=${DEFAULT_HUMIDITY_MIN}
      - DEFAULT_HUMIDITY_MAX=${DEFAULT_HUMIDITY_MAX}
      - DEFAULT_HUMIDITY_UPPER=${DEFAULT_HUMIDITY_UPPER}
      - DEFAULT_HUMIDITY_INTERVAL=${DEFAULT_HUMIDITY_INTERVAL}
      - DEFAULT_HUMIDITY_INCREASE_RATE=${DEFAULT_HUMIDITY_INCREASE_RATE}
      - DEFAULT_HUMIDITY_DECREASE_RATE=${DEFAULT_HUMIDITY_DECREASE_RATE}

  planner:
    build: ./planner
    restart: always
    # depends_on:
    #   - rabbitmq

  fast-downward:
    build: ./planner
    image: fast-downward
    # volumes:
    #   - ./problems:/problems # directory for PDDL files
    working_dir: /fast-downward
    entrypoint: ['./fast-downward.py']

  gateway:
    image: zwavejs/zwave-js-ui:latest
    #build: ./gateway
    restart: always
    privileged: true
    ports:
      - '8091:8091' # Web interface port
      - '5000:5000'
    devices:
      - '/dev/serial/by-id/usb-0658_0200-if00:/dev/zwave'
    tty: true
    stop_signal: SIGINT
    networks:
      - zwave
    environment:
      USB_PATH: "/dev/ttyACM0"
      S0_LEGACY_KEY: "1B7405BF85999197EE1F6C58B19A9E3F"
      ZWAVEJS_EXTERNAL_CONFIG: "/usr/src/app/store/.config-db"
    volumes:
      - gateway_data:/usr/src/app/store
    expose:
      - 8091
     # - 3000
