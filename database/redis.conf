# Redis Configuration for IoT MQTT Message Storage

# General settings
bind 127.0.0.1 ::1  # Bind to localhost for security
protected-mode yes  # Enable protected mode
port 6379           # Default Redis port

# Persistence settings
save 900 1          # Save the dataset every 900 seconds if at least 1 key changed
save 300 10         # Save the dataset every 300 seconds if at least 10 keys changed
save 60 10000       # Save the dataset every 60 seconds if at least 10,000 keys changed

rdbcompression yes  # Compress RDB snapshots
dbfilename redis.rdb # RDB file name
dir /data              # Directory for RDB file

# Append-only file (AOF) for durability
appendonly yes       # Enable AOF
appendfsync everysec # Sync AOF file every second

# Memory optimization
maxmemory 256mb              # Set a memory limit (adjust based on your system)
maxmemory-policy allkeys-lru # Evict keys using LRU when maxmemory is reached

# Security
requirepass your_secure_password_here # Set a strong password for Redis
rename-command FLUSHALL ""            # Disable FLUSHALL for safety
rename-command FLUSHDB ""             # Disable FLUSHDB for safety

# Networking
tcp-keepalive 300  # Keep TCP connections alive

# Logging
loglevel notice     # Set log level
logfile "redis.log" # Log file name

# MQTT message storage optimization
hash-max-ziplist-entries 512  # Optimize hash data structure for MQTT messages
hash-max-ziplist-value 64     # Optimize hash data structure for MQTT messages

# Disable unnecessary features for IoT
lazyfree-lazy-eviction yes    # Free memory in the background
lazyfree-lazy-expire yes      # Expire keys in the background
lazyfree-lazy-server-del yes  # Delete keys in the background